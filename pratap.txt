Backend :
	- Java
	- Spring Core
	- Spring Boot
	- Spring JPA
	- Spring Data
	- Spring Security/OAuth2/SSL/JWT
	- Spring JDBC
	- Hibernate
	- Unit Testing
	
Frontend :
	- HTML
	- CSS
	- JS
	- React
	- React Native
	
JS Libraries :
	- Material UI
	
Charting Lib :
	- Echart JS
	
Web Services :
	- RESTful web services

Databases :
	- PostgreSQL(SQL)
	- MySQL(SQL)
	- Apache Cassandra(NoSQL)

Microservices :
	- RestTemplate
	- WebClient
	- Redis

Data Structures:
	- 

OOPS : 
	- Object
	- Class
	- Inheritance
	- Polymorphism
	- Abstraction
	- Encapsulation
	- Object-Oriented design:
		- Coupling
		- Cohesion
		- Association
		- Aggregation
		- Composition

SOLID priciples :
 	- Single Responsibility
	- Open/Closed
	- Liskov Substitution
	- Interface Segregation
	- Dependency Inversion

Design Patterns :
	- 

System Design : 


Interview Questions:
-------------------
 1. Microservices Disadvantages, personal experience
 2. Consider that there are 10 microservices in your architecture, how will you secure the communication between M1 and M2, etc.
 3. Your experience on Microservice Design Patterns.
 4. Consider each microservice has individual data source, I have a requirement to join data from two data sources, how can I implement this?
 5. @Component and @Bean
 6. What do you know about Spring Transaction Management and how to implement it?
 7.  Have you worked on Future and Completable Future? Future vs Completable Future
 8. Crud Repository vs JPA Repository
 10. Write an API to observe a list of students(name, age) do post, put and sort the list by name, and again sort it by age before sending back
     public ResponseEntity(Student) insert(@RequestBody List Student students){}
 	• Serializable
 	• diff 1L vs generated
 	• Will you face any issues if all the classes have 1L
 	• Why ResponseEntity?
 	• Comparator vs Comparable
 	• Collections.sort()
 	• Multiple Comparator
 	• Method Reference
 	• Java 8 Lambda
 	• Put vs Patch
 11. Containerization experience
 12. Docker Swarms
 13. Java Bean Mapping - BeanUtils, Dozer, MapStruct
 14. non-singleton to Singleton Bean - prototype inside a singleton
 15. SLF4j vs Log4J
 16. Design Patterns - tell any 4 and explain with your experience?
 17. Spring Dependency Injection
 18. Spring Boot Profiles?
 19. Functional Interfaces
 20. what function inside predicate have to made use of other than isEqual()
 21. .map() vs .flatmap()
 22. Test Driven Development
 23. functional interfaces
 24. Can Functional Interface have default and static methods?
 25. Why Functional Interface has only one method?
 26. Scope of Lambda
 27. explain kafka implementation in springboot project?
 28. Can I use kafka without zookeeper?
 29. what about ACID property in microservices, like transaction scaling multiple microservices?
 30. put vs patch?
 31. how will you implement put
 32. rest docs says put can also save data when data is not found?
 33. have you implemented delete mapping
 34. delete not a frequent implementation for prod apps, explained why?
 35. two beans are there in my config, I want Bean B  should get initialized before Bean A, how to achieve?
 36. two configs A and B in springboot, how to use Config B beans inside Config A?
 37. pessimistic locking vs optimistic locking
 38. Spring Transaction Management
 39. what happens under @Transactional
 40. I have some code inside a static block and some code inside a @postConstruct block which will run first
 41. explain Oauth 2 process?
 42. different api gateways? why need them?
 43. what architecture design pattern to use with containers?
 44. a request goes through a series of checks (basically multiple if loops like more than 4 to 5 and these have some concrete impl) - what pattern suits this scenario
 45. which feature in cloud do you think is best according to you, why
 46. how will you decide if you are ready for adapting microservice architecture
 47. monolithic, soa and microservice
 48. How to decompose a monolithic project
 49. disadvantages of microservices
 50. how will you implement communication bet microservices
 51. logging mechanism for microservices
 52. why ELK stack instead of Splunk for logging?
 53. deployment of microservices
 54. importance of spring boot profile, give few scenarios where you used it
 55. Caching mechanism
 56. Do you think we can use a database for caching?
 57. explain how deletion works in cassandra?
 


